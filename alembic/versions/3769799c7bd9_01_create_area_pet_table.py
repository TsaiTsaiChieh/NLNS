"""01 Create area & pet table

Revision ID: 3769799c7bd9
Revises: 
Create Date: 2021-03-11 09:51:50.486553

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.schema import CreateSequence, DropSequence, Sequence

# revision identifiers, used by Alembic.
revision = "3769799c7bd9"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    op.execute(CreateSequence(Sequence("area_id_seq")))
    op.execute(CreateSequence(Sequence("pet_id_seq")))
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "area",
        sa.Column(
            "id",
            sa.Integer(),
            server_default=sa.text("nextval('area_id_seq')"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=8), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "pet",
        sa.Column(
            "id",
            sa.Integer(),
            server_default=sa.text("nextval('pet_id_seq')"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=128), nullable=True, comment="寵物名"),
        sa.Column(
            "ref",
            sa.Enum("gov", "map", "own", name="ref_types"),
            nullable=False,
            comment="資料來源",
        ),
        sa.Column(
            "area_id",
            sa.Integer(),
            nullable=False,
            comment="所屬縣市代碼：2 臺北市 / 3 新北市 / 4 基隆市 / 5 宜蘭縣 / 6 桃園縣 / 7 新竹縣 / 8 新竹市 / 9 苗栗縣 / 10 臺中市 / 11 彰化縣 / 12 南投縣 / 13 雲林縣 / 14 嘉義縣 / 15 嘉義市 / 16 臺南市 / 17 高雄市 / 18 屏東縣 / 19 花蓮縣 / 20 臺東縣 / 21 澎湖縣 / 22 金門縣 / 23 連江縣",
        ),
        sa.Column("kind", sa.String(length=16), nullable=False, comment="寵物種類"),
        sa.Column(
            "sex", sa.SmallInteger(), nullable=False, comment="-1 未知 / 0 母 / 1 公"
        ),
        sa.Column("color", sa.String(length=8), nullable=True),
        sa.Column(
            "age", sa.SmallInteger(), nullable=False, comment="年齡：-1 未知 / 0 幼體 / 1 成體"
        ),
        sa.Column(
            "ligation",
            sa.SmallInteger(),
            nullable=False,
            comment="-1 / 未知 / 0 未結紮 / 1 已結紮",
        ),
        sa.Column(
            "rabies",
            sa.SmallInteger(),
            nullable=False,
            comment="狂犬病疫苗：-1 未知 / 0 未施打 / 1 已施打",
        ),
        sa.Column("found_place", sa.String(), nullable=True, comment="尋獲地"),
        sa.Column("title", sa.String(), nullable=True, comment="寵物文章標題"),
        sa.Column(
            "status",
            sa.SmallInteger(),
            nullable=False,
            comment="寵物狀態：0 無 / 1 開放 / 2 已被認養 / 3 其他 / -1 死亡",
        ),
        sa.Column("remark", sa.String(), nullable=True, comment="資料備註"),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("phone", sa.String(length=16), nullable=True),
        sa.Column("image", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["area_id"],
            ["area.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pet_age"), "pet", ["age"], unique=False)
    op.create_index(op.f("ix_pet_area_id"), "pet", ["area_id"], unique=False)
    op.create_index(op.f("ix_pet_kind"), "pet", ["kind"], unique=False)
    op.create_index(op.f("ix_pet_ligation"), "pet", ["ligation"], unique=False)
    op.create_index(op.f("ix_pet_sex"), "pet", ["sex"], unique=False)
    op.create_index(op.f("ix_pet_status"), "pet", ["status"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_pet_status"), table_name="pet")
    op.drop_index(op.f("ix_pet_sex"), table_name="pet")
    op.drop_index(op.f("ix_pet_ligation"), table_name="pet")
    op.drop_index(op.f("ix_pet_kind"), table_name="pet")
    op.drop_index(op.f("ix_pet_area_id"), table_name="pet")
    op.drop_index(op.f("ix_pet_age"), table_name="pet")
    op.drop_table("pet")
    op.drop_table("area")
    # ### end Alembic commands ###
    op.execute(DropSequence(Sequence("area_id_seq")))
    op.execute(DropSequence(Sequence("pet_id_seq")))
